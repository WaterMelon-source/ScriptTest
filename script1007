--Setup--

local UserInputService = game:GetService("UserInputService")

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Options = Fluent.Options

local UserName = game.Players.LocalPlayer.Name
local DisplayName = game.Players.LocalPlayer.DisplayName
local UserId = game.Players.LocalPlayer.UserId
local Country = game:GetService("LocalizationService"):GetCountryRegionForPlayerAsync(game.Players.LocalPlayer)
local Device = "Device"

if UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled and not UserInputService.MouseEnabled then
	Device = "Mobile"
elseif not UserInputService.TouchEnabled and UserInputService.KeyboardEnabled and UserInputService.MouseEnabled then
	Device = "Computer"
elseif UserInputService.TouchEnabled and UserInputService.KeyboardEnabled and UserInputService.MouseEnabled then
	Device = "Computer With TouchScreen"
end

local notify_Sound = Instance.new("Sound", game.Players.LocalPlayer)
notify_Sound.SoundId = "rbxassetid://3320590485"
notify_Sound.Volume = 2

local Window = Fluent:CreateWindow({
    Title = "üîì  Dash " .. "0.0.5",
    SubTitle = " ‚Ä¢  Club Roblox üß∏",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 445),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.Home-- Used when theres no MinimizeKeybind
})

local Tabs = {
    Home = Window:AddTab({Title = "Home", Icon = "rbxassetid://10723407389"}),
	News = Window:AddTab({Title = "News", Icon = "rbxassetid://10734907168"}),
	Player = Window:AddTab({Title = "Player", Icon = "rbxassetid://10734920149"}),
	Farm = Window:AddTab({Title = "Farming", Icon = "rbxassetid://10709762879"}),
    Settings = Window:AddTab({Title = "Settings", Icon = "settings"})
}

function Notify(content, time)
	notify_Sound:Play()
	Fluent:Notify({
		Title = "üí®  Dash",
		Content = content,
		--SubContent = "SubContent", -- Optional
		Duration = time -- Set to nil to make the notification not disappear
	})
end

Tabs.Home:AddParagraph({
    Title = "üí®  Dash  üí®"
})

local function addUserParagraph(UserName, DisplayName, UserId, Country, Device)
	local deviceIcon = Device == "Mobile" and "üì±" or Device == "Computer" and "üñ•Ô∏è" or Device == "Computer With TouchScreen" and "üíª"
	local countryFlag = Country == "RU" and "üá∑üá∫" or Country == "US" and "üá∫üá∏"
	
	Tabs.Home:AddParagraph({
		Title = "üë§  User  üë§",
		Content = "\n\n üè°  UserName : "..UserName.."\n\n üí¨  Display Name : "..DisplayName.."\n\n üí≥  UserId : "..UserId.."\n\n "..countryFlag.."  Country : "..Country.."\n\n üíâ  Executor : "..identifyexecutor().."\n\n "..deviceIcon.."  Device : "..Device.."\n"
	})
end

if Country == "RU" or Country == "US" then
	addUserParagraph(UserName, DisplayName, UserId, Country, Device)
end

Tabs.Home:AddParagraph({
    Title = "ü§ñ  Discord  ü§ñ",
    Content = "üîó  Link : --------------  üîó"
})

local SpeedSlider = Tabs.Player:AddSlider("Slider", {
    Title = "üëü   Speed",
    Description = "\nChange Player's Speed",
    Default = 16,
    Min = 0,
    Max = 999,
    Rounding = 1,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end
})

Tabs.Player:AddButton({
    Title = "üîÑ  Set to default",
    --Description = "",
    Callback = function()
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
		SpeedSlider:SetValue(16)
    end
})

local JumpPowerSlider = Tabs.Player:AddSlider("Slider", {
    Title = "ü¶µ  JumpPower",
    Description = "\nChange Player's JumpPower",
    Default = 50,
    Min = 0,
    Max = 999,
    Rounding = 1,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
    end
})

Tabs.Player:AddButton({
    Title = "üîÑ  Set to default",
    --Description = "",
    Callback = function()
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
		JumpPowerSlider:SetValue(50)
    end
})



Tabs.News:AddParagraph({
    Title = "‚ú® New Features ‚ú®",
    Content = "\n\n üçï  Added Autofarm Pizza  üçï\n\n üîã  Auto Energy üîã\n\n üßÅ  Auto Hunger üßÅ\n\n\n Date: ___"
})

--------Main---------
getgenv().spawn = 2
getgenv().pizzas = 0
-------Sauce---------
getgenv().sauceDelay = 0.3
getgenv().sauceColorNum = 1
getgenv().sauceSkip = false
------Toppings--------
getgenv().toppingsDelay = 0.25
getgenv().topping1Skip = false
getgenv().topping2Skip = false
getgenv().topping3Skip = false
getgenv().topping4Skip = false
getgenv().topping5Skip = false
getgenv().toppingsSkip = false
-------Oven----------
getgenv().ovenDelay = 5
------Slicer---------
getgenv().slicerDelay = 1
------Selling--------
getgenv().selling = false
------Time-----------
getgenv().summToppings = 0
for i = 1, 5 do
    if getgenv()["topping" .. i .. "Skip"] == false then
        getgenv().summToppings += 1
    end
end

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local MoveEvents = ReplicatedStorage.RemoteEvents.MoveEvents
local PizzaEvents = ReplicatedStorage.PizzaEvents
local workspaceItems = game.workspace.Items
local serverInteractables = game.workspace.ServerInteractables

-- Helper function to move and anchor the pizza object
local function movePizza(v, position, delay)
	v.Root.Anchored = true
	MoveEvents.remoteMoveObject:FireServer(v, position)
	wait(delay)
	v.Root.Anchored = false
end

-- Sauce handler function
local function handleSauce(v)
	for _, f in pairs(serverInteractables:GetChildren()) do
		if f:FindFirstChild("Num") and f.Num.Value == getgenv().sauceColorNum then
			local saucePositions = {
				[1] = CFrame.new(5.3, 254.656, 9.534),
				[2] = CFrame.new(5.17, 254.411, 16.221),
				[3] = CFrame.new(5.299, 254.861, 17.799),
				[4] = CFrame.new(5.299, 254.359, 33.745)
			}
			movePizza(v, saucePositions[getgenv().sauceColorNum], getgenv().sauceDelay)
			PizzaEvents.remoteAddSauce:FireServer(f)
			wait(getgenv().sauceDelay)
			break
		end
	end
end

-- Toppings handler function
local function handleToppings(v)
	getgenv().pizzas += 1
	for _, f in pairs(serverInteractables:GetChildren()) do
		local toppingPositions = {
			T1 = CFrame.new(19, 254, 50),
			T2 = CFrame.new(28, 254, 50),
			T3 = CFrame.new(36, 254, 50),
			T4 = CFrame.new(44, 254, 50),
			T5 = CFrame.new(52, 254, 50)
		}
		local topping = f:FindFirstChild("ToppingName")
		if topping and not getgenv()[topping.Value .. "Skip"] then
			movePizza(v, toppingPositions[topping.Value], getgenv().toppingsDelay)
			PizzaEvents.remoteAddTopping:FireServer(f)
		end
	end
end

-- Oven handler function
local function handleOven(v)
	PizzaEvents.remoteResetOven:FireServer(serverInteractables.Oven)
	movePizza(v, CFrame.new(80, 254.965, 50.411), 0.01)
end

-- Slicer handler function
local function handleSlicer(v)
	for _, f in pairs(serverInteractables:GetChildren()) do
		if f:FindFirstChild("Body") and f.Body.CFrame == CFrame.new(55.471, 257.631, 4.983) then
			movePizza(v, CFrame.new(55.364, 254.607, 6.827), getgenv().slicerDelay)
			PizzaEvents.remotePizzaStamper:FireServer(f)
		end
	end
end

-- Boxes handler function
local function handleBoxes(v)
	for i = 1, getgenv().spawn do
		wait(1.73)
		PizzaEvents.remoteGetBox:FireServer(serverInteractables.DropPizzaBox)
	end
	for _, d in pairs(workspaceItems:GetChildren()) do
		local boxController = d:FindFirstChild("Touch") and d.Touch:FindFirstChild("BoxController")
		if boxController and getgenv().selling and getgenv().working then
			boxController.Disabled = true
			wait(0.01)
			movePizza(d, CFrame.new(43.937, 251.799, -51.34), 0.01)
			movePizza(v, CFrame.new(43.937, 251.799, -51.34), 0.01)
			movePizza(d, CFrame.new(40.177, 254.3, -64.869), 0.01)
		end
	end
end

-- Main function to handle pizza teleportation
function TeleportPizza(location, Oven)
	for _, v in pairs(workspaceItems:GetChildren()) do
		local c = v:FindFirstChild("C")
		local hasToppings = c:FindFirstChild("T1") or c:FindFirstChild("T2") or c:FindFirstChild("T3") or c:FindFirstChild("T4") or c:FindFirstChild("T5")
		local isCooked = c:FindFirstChild("CookedState")
		local hasSauce = c:FindFirstChild("Sauce")

		if location == "Sauce" and not getgenv().sauceSkip and getgenv().AutoFarmPizza and not hasSauce and not isCooked and not hasToppings then
			handleSauce(v)
		elseif location == "Toppings" and not getgenv().toppingsSkip and getgenv().AutoFarmPizza and hasSauce and not isCooked and not hasToppings then
			handleToppings(v)
		elseif location == "Oven" and getgenv().AutoFarmPizza and hasSauce and hasToppings and not isCooked then
			handleOven(v)
		elseif location == "Slicer" and getgenv().AutoFarmPizza and hasSauce and isCooked and not v:FindFirstChild("Cut") and hasToppings then
			handleSlicer(v)
		elseif location == "Boxes" and getgenv().AutoFarmPizza then
			handleBoxes(v)
		end
	end
end


function CalculateCoins(unit)
    local allTime = (getgenv().spawn * 1.78) + (getgenv().pizzas * getgenv().sauceDelay) + getgenv().ovenDelay + (getgenv().pizzas * getgenv().slicerDelay) + ((getgenv().pizzas * getgenv().toppingsDelay) * getgenv().summToppings)
    local sellingTime = getgenv().pizzas * 2.5
    local combinedTime = allTime + sellingTime

    local intervalHour = 3600 / combinedTime
    local totalCoinsHour = intervalHour * (getgenv().pizzas * 20)
    return (tostring(math.floor(totalCoinsHour + 0.5)).." coins/hour")
end

local SauceDropdown = Tabs.Farm:AddDropdown("SauceDropdown", {
    Title = "üîÅ  AutoFarm",
    Values = {"Pizza AutoFarm üçï", "lolas"},
    Multi = false,
    Default = 2,
})

SauceDropdown:OnChanged(function(Value)
    if Value == "Pizza AutoFarm üçï" then
        getgenv().CoinsShow = Tabs.Farm:AddParagraph({
            Title = "üí∞  Coins Predictions",
            Content = "0 coins/hour"
        })
        
        getgenv().AutoFarmPizzaToggle = Tabs.Farm:AddToggle("AutoFarmPizza", {Title = "üçï  Auto Farm Pizza", Default = getgenv().AutoFarmPizza})
        
        getgenv().AutoFarmPizzaToggle:OnChanged(function(Value)
            getgenv().AutoFarmPizza = Value
        
            while getgenv().AutoFarmPizza == true do
                print("Started!")
                getgenv().pizzas = 0
                for i = 1,getgenv().spawn do
                    --print("spawned")
                    game.ReplicatedStorage.PizzaEvents.remoteDropDough:FireServer(workspace.ServerInteractables.DoughDropper)
                    wait(1.78)
                end
                TeleportPizza("Sauce")
                TeleportPizza("Toppings")
                getgenv().CoinsShow:SetDesc(CalculateCoins())
                TeleportPizza("Oven")
                wait(getgenv().ovenDelay)
                TeleportPizza("Slicer")
                if getgenv().selling == true and getgenv().working == true then
                    TeleportPizza("Boxes")
                end
            end
            getgenv().CoinsShow:SetDesc("0 coins/hour")
        end)
        
        getgenv().ConfigTab = Tabs.Farm:AddParagraph({
            Title = "‚öôÔ∏è  Configs  ‚öôÔ∏è"
            --Content = ""
        })
        
        getgenv().SpawnSlider = Tabs.Farm:AddSlider("SpawnSlider", {
            Title = "üçû  Spawn Count",
            Description = "",
            Default = 1,
            Min = 1,
            Max = 15,
            Rounding = 0.1,
            Callback = function(Value)
                getgenv().spawn = Value
            end
        })
        
        getgenv().SauceSlider = Tabs.Farm:AddSlider("SauceSlider", {
            Title = "üå∂Ô∏è  Sauce Delay",
            Description = "",
            Default = 0.3,
            Min = 0.1,
            Max = 2,
            Rounding = 1,
            Callback = function(Value)
                getgenv().sauceDelay = Value
            end
        })
        
        getgenv().SauceDropdown = Tabs.Farm:AddDropdown("SauceDropdown", {
            Title = "üé®  Sauce Color",
            Values = {"Red üî¥", "Green üü¢", "Purple üü£", "Orange üü†"},
            Multi = false,
            Default = 1,
        })
        
        getgenv().SauceDropdown:OnChanged(function(Value)
            if Value == "Red üî¥" then
                getgenv().sauceColorNum = 1
            elseif Value == "Green üü¢" then
                getgenv().sauceColorNum = 2
            elseif Value == "Purple üü£" then
                getgenv().sauceColorNum = 3
            elseif Value == "Orange üü†" then
                getgenv().sauceColorNum = 4
            end
        end)
    elseif Value == "lolas" then
        if getgenv().CoinsShow then
            getgenv().CoinsShow:Destroy()
            getgenv().AutoFarmPizzaToggle:Destroy()
            getgenv().ConfigTab:Destroy()
            getgenv().SpawnSlider:Destroy()
            getgenv().SauceSlider:Destroy()
            getgenv().SauceDropdown:Destroy()
        end
    end
end)

Window:SelectTab(1)

Notify("‚úÖ  Successfully Loaded!", 5)
