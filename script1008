--Setup--

local UserInputService = game:GetService("UserInputService")

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Options = Fluent.Options

local UserName = game.Players.LocalPlayer.Name
local DisplayName = game.Players.LocalPlayer.DisplayName
local UserId = game.Players.LocalPlayer.UserId
local Country = game:GetService("LocalizationService"):GetCountryRegionForPlayerAsync(game.Players.LocalPlayer)
local Device = "Device"

if UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled and not UserInputService.MouseEnabled then
	Device = "Mobile"
elseif not UserInputService.TouchEnabled and UserInputService.KeyboardEnabled and UserInputService.MouseEnabled then
	Device = "Computer"
elseif UserInputService.TouchEnabled and UserInputService.KeyboardEnabled and UserInputService.MouseEnabled then
	Device = "Computer With TouchScreen"
end

local notify_Sound = Instance.new("Sound", game.Players.LocalPlayer)
notify_Sound.SoundId = "rbxassetid://3320590485"
notify_Sound.Volume = 2

local Window = Fluent:CreateWindow({
    Title = "üîì  Dash " .. "0.0.5",
    SubTitle = " ‚Ä¢  Club Roblox üß∏",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 445),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.Home-- Used when theres no MinimizeKeybind
})

local Tabs = {
    Home = Window:AddTab({Title = "Home", Icon = "rbxassetid://10723407389"}),
	News = Window:AddTab({Title = "News", Icon = "rbxassetid://10734907168"}),
	Player = Window:AddTab({Title = "Player", Icon = "rbxassetid://10734920149"}),
	Farm = Window:AddTab({Title = "Farming", Icon = "rbxassetid://10709762879"}),
    Settings = Window:AddTab({Title = "Settings", Icon = "settings"})
}

function Notify(content, time)
	notify_Sound:Play()
	Fluent:Notify({
		Title = "üí®  Dash",
		Content = content,
		--SubContent = "SubContent", -- Optional
		Duration = time -- Set to nil to make the notification not disappear
	})
end

Tabs.Home:AddParagraph({
    Title = "üí®  Dash  üí®"
})

local function addUserParagraph(UserName, DisplayName, UserId, Country, Device)
	local deviceIcon = Device == "Mobile" and "üì±" or Device == "Computer" and "üñ•Ô∏è" or Device == "Computer With TouchScreen" and "üíª"
	local countryFlag = Country == "RU" and "üá∑üá∫" or Country == "US" and "üá∫üá∏"
	
	Tabs.Home:AddParagraph({
		Title = "üë§  User  üë§",
		Content = "\n\n üè°  UserName : "..UserName.."\n\n üí¨  Display Name : "..DisplayName.."\n\n üí≥  UserId : "..UserId.."\n\n "..countryFlag.."  Country : "..Country.."\n\n üíâ  Executor : "..identifyexecutor().."\n\n "..deviceIcon.."  Device : "..Device.."\n"
	})
end

if Country == "RU" or Country == "US" then
	addUserParagraph(UserName, DisplayName, UserId, Country, Device)
end

Tabs.Home:AddParagraph({
    Title = "ü§ñ  Discord  ü§ñ",
    Content = "üîó  Link : --------------  üîó"
})

local SpeedSlider = Tabs.Player:AddSlider("Slider", {
    Title = "üëü   Speed",
    Description = "\nChange Player's Speed",
    Default = 16,
    Min = 0,
    Max = 999,
    Rounding = 1,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end
})

Tabs.Player:AddButton({
    Title = "üîÑ  Set to default",
    --Description = "",
    Callback = function()
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
		SpeedSlider:SetValue(16)
    end
})

local JumpPowerSlider = Tabs.Player:AddSlider("Slider", {
    Title = "ü¶µ  JumpPower",
    Description = "\nChange Player's JumpPower",
    Default = 50,
    Min = 0,
    Max = 999,
    Rounding = 1,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
    end
})

Tabs.Player:AddButton({
    Title = "üîÑ  Set to default",
    --Description = "",
    Callback = function()
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
		JumpPowerSlider:SetValue(50)
    end
})



Tabs.News:AddParagraph({
    Title = "‚ú® New Features ‚ú®",
    Content = "\n\n üçï  Added Autofarm Pizza  üçï\n\n üîã  Auto Energy üîã\n\n üßÅ  Auto Hunger üßÅ\n\n\n Date: ___"
})

--------Main---------
getgenv().spawn = 2
getgenv().pizzas = 0
-------Sauce---------
getgenv().sauceDelay = 0.3
getgenv().sauceColorNum = 1
getgenv().sauceSkip = false
------Toppings--------
getgenv().toppingsDelay = 0.25
getgenv().topping1Skip = false
getgenv().topping2Skip = false
getgenv().topping3Skip = false
getgenv().topping4Skip = false
getgenv().topping5Skip = false
getgenv().toppingsSkip = false
-------Oven----------
getgenv().ovenDelay = 5
------Slicer---------
getgenv().slicerDelay = 1
------Selling--------
getgenv().selling = false
------Time-----------
getgenv().summToppings = 0
for i = 1, 5 do
    if getgenv()["topping" .. i .. "Skip"] == false then
        getgenv().summToppings += 1
    end
end

function TeleportPizza(location)
	for i,v in pairs(game.workspace.Items:GetChildren()) do
		if v:FindFirstChild("C") then
			if location == "Sauce" and getgenv().sauceSkip == false and getgenv().AutoFarmPizza == true then
				if not v.C:FindFirstChild("Sauce") and not v.C:FindFirstChild("CookedState") then
					if not v.C:FindFirstChild("T1") and not v.C:FindFirstChild("T2") and not v.C:FindFirstChild("T3") and not v.C:FindFirstChild("T4") and not v.C:FindFirstChild("T5") then
						for i,f in pairs(game.workspace.ServerInteractables:GetChildren()) do
							if f:FindFirstChild("Num") then
								if getgenv().sauceColorNum == 1 and f.Num.Value == 1 then
									v.Root.Anchored = true
									game:GetService("ReplicatedStorage").RemoteEvents.MoveEvents.remoteMoveObject:FireServer(v, CFrame.new(5.298999786376953, 254.65623474121094, 9.534388542175293) * CFrame.Angles(-0, 0, -0))
									wait(getgenv().sauceDelay)
									game:GetService("ReplicatedStorage").PizzaEvents.remoteAddSauce:FireServer(f)
									wait(getgenv().sauceDelay)
									v.Root.Anchored = false
								end
								if getgenv().sauceColorNum == 2 and f.Num.Value == 2 then
									v.Root.Anchored = true
									game:GetService("ReplicatedStorage").RemoteEvents.MoveEvents.remoteMoveObject:FireServer(v, CFrame.new(5.1721978187561035, 254.41131591796875, 16.220552444458008) * CFrame.Angles(-0, 0, -0))
									wait(getgenv().sauceDelay)
									game:GetService("ReplicatedStorage").PizzaEvents.remoteAddSauce:FireServer(f)
									wait(getgenv().sauceDelay)
									v.Root.Anchored = false
								end
								if getgenv().sauceColorNum == 3 and f.Num.Value == 3 then
									v.Root.Anchored = true
									game:GetService("ReplicatedStorage").RemoteEvents.MoveEvents.remoteMoveObject:FireServer(v, CFrame.new(5.2990007400512695, 254.86138916015625, 17.798870086669922) * CFrame.Angles(-0, 0, -0))
									wait(getgenv().sauceDelay)
									game:GetService("ReplicatedStorage").PizzaEvents.remoteAddSauce:FireServer(f)
									wait(getgenv().sauceDelay)
									v.Root.Anchored = false
								end
								if getgenv().sauceColorNum == 4 and f.Num.Value == 4 then
									v.Root.Anchored = true
									game:GetService("ReplicatedStorage").RemoteEvents.MoveEvents.remoteMoveObject:FireServer(v, CFrame.new(5.299001693725586, 254.35910034179688, 33.74543380737305) * CFrame.Angles(-0, 0, -0))
									wait(getgenv().sauceDelay)
									game:GetService("ReplicatedStorage").PizzaEvents.remoteAddSauce:FireServer(f)
									wait(getgenv().sauceDelay)
									v.Root.Anchored = false
								end
							end
						end
					end
				end
			end
			if location == "Toppings" and getgenv().toppingsSkip == false and getgenv().AutoFarmPizza == true then
				if not v.C:FindFirstChild("CookedState") and v.C:FindFirstChild("Sauce") then
					if not v.C:FindFirstChild("T1") and not v.C:FindFirstChild("T2") and not v.C:FindFirstChild("T3") and not v.C:FindFirstChild("T4") and not v.C:FindFirstChild("T5") then
						getgenv().pizzas += 1
                        for i,f in pairs(game.workspace.ServerInteractables:GetChildren()) do
							if f:FindFirstChild("ToppingName") then
								v.Root.Anchored = true
								if f.ToppingName.Value == "T1" and getgenv().topping1Skip == false then
									game:GetService("ReplicatedStorage").RemoteEvents.MoveEvents.remoteMoveObject:FireServer(v, CFrame.new(21, 254, 50) * CFrame.Angles(-0, 0, -0))
									wait(0.1)
									game:GetService("ReplicatedStorage").PizzaEvents.remoteAddTopping:FireServer(f)
									wait(getgenv().toppingsDelay)
                                    v.Root.Anchored = false
								elseif f.ToppingName.Value == "T2" and getgenv().topping2Skip == false then
									game:GetService("ReplicatedStorage").RemoteEvents.MoveEvents.remoteMoveObject:FireServer(v, CFrame.new(29, 254, 50) * CFrame.Angles(-0, 0, -0))
									wait(0.1)
									game:GetService("ReplicatedStorage").PizzaEvents.remoteAddTopping:FireServer(f)
									wait(getgenv().toppingsDelay)
									v.Root.Anchored = false
                                elseif f.ToppingName.Value == "T3" and getgenv().topping3Skip == false then
									game:GetService("ReplicatedStorage").RemoteEvents.MoveEvents.remoteMoveObject:FireServer(v, CFrame.new(37, 254, 50) * CFrame.Angles(-0, 0, -0))
									wait(0.1)
									game:GetService("ReplicatedStorage").PizzaEvents.remoteAddTopping:FireServer(f)
									wait(getgenv().toppingsDelay)
									v.Root.Anchored = false
                                elseif f.ToppingName.Value == "T4" and getgenv().topping4Skip == false then
									game:GetService("ReplicatedStorage").RemoteEvents.MoveEvents.remoteMoveObject:FireServer(v, CFrame.new(45, 254, 50) * CFrame.Angles(-0, 0, -0))
									wait(0.1)
									game:GetService("ReplicatedStorage").PizzaEvents.remoteAddTopping:FireServer(f)
									wait(getgenv().toppingsDelay)
									v.Root.Anchored = false
                                elseif f.ToppingName.Value == "T5" and getgenv().topping5Skip == false then
									game:GetService("ReplicatedStorage").RemoteEvents.MoveEvents.remoteMoveObject:FireServer(v, CFrame.new(53, 254, 50) * CFrame.Angles(-0, 0, -0))
									wait(0.1)
									game:GetService("ReplicatedStorage").PizzaEvents.remoteAddTopping:FireServer(f)
									wait(getgenv().toppingsDelay)
									v.Root.Anchored = false
								end
							end
						end
					end
				end
			end 
			if location == "Oven" and getgenv().AutoFarmPizza == true then
				if not v.C:FindFirstChild("CookedState") and v.C:FindFirstChild("Sauce") then
					if v.C:FindFirstChild("T1") or v.C:FindFirstChild("T2") or v.C:FindFirstChild("T3") or v.C:FindFirstChild("T4") or v.C:FindFirstChild("T5") then
						--print("teleportedOvn")
						game:GetService("ReplicatedStorage").PizzaEvents.remoteResetOven:FireServer(workspace.ServerInteractables.Oven)
						game:GetService("ReplicatedStorage").RemoteEvents.MoveEvents.remoteMoveObject:FireServer(v, CFrame.new(80, 254, 50) * CFrame.Angles(-0, 0, -0))
						game:GetService("ReplicatedStorage").PizzaEvents.remoteResetOven:FireServer(workspace.ServerInteractables.Oven)
						wait(0.01)
					end
				end
			end
			if location == "Slicer" and getgenv().AutoFarmPizza == true then
				if v.C:FindFirstChild("CookedState") and v.C:FindFirstChild("Sauce") and not v:FindFirstChild("Cut") then
					if v.C:FindFirstChild("T1") or v.C:FindFirstChild("T2") or v.C:FindFirstChild("T3") or v.C:FindFirstChild("T4") or v.C:FindFirstChild("T5") then
						for i,f in pairs(game.workspace.ServerInteractables:GetChildren()) do
							if f:FindFirstChild("Body") and f:FindFirstChild("Body").CFrame == CFrame.new(55.4714584, 257.630737, 4.98270702) then
								--print("teleportedSlc")
								v.Root.Anchored = true
								game:GetService("ReplicatedStorage").RemoteEvents.MoveEvents.remoteMoveObject:FireServer(v, CFrame.new(55.363868713378906, 254.60670471191406, 6.826766014099121) * CFrame.Angles(-0, 0, -0))
								wait(0.001)
								game:GetService("ReplicatedStorage").PizzaEvents.remotePizzaStamper:FireServer(f)
								v.Root.Anchored = false
								wait(getgenv().slicerDelay)
							end
						end
					end
				end
			end
		end
	end
end

function SellPizzas(location)
    if location == "Boxes" and getgenv().AutoFarmPizza == true then
        for i = 1,getgenv().spawn do
            wait(1.73)
            game:GetService("ReplicatedStorage").PizzaEvents.remoteGetBox:FireServer(workspace.ServerInteractables.DropPizzaBox)
        end
        for i,d in pairs(game.workspace.Items:GetChildren()) do
            if d:FindFirstChild("Touch") and d.Touch:FindFirstChild("BoxController") and getgenv().SellPizza == true and getgenv().AutoFarmPizza == true then
                for i,v in pairs(game.workspace.Items:GetChildren()) do
                    if v:FindFirstChild("C") then
                        if v.C:FindFirstChild("CookedState") and v.C:FindFirstChild("Sauce") and not v:FindFirstChild("Cut") then
                            if v.C:FindFirstChild("T1") or v.C:FindFirstChild("T2") or v.C:FindFirstChild("T3") or v.C:FindFirstChild("T4") or v.C:FindFirstChild("T5") then
                                d.Touch:FindFirstChild("BoxController").Disabled = true
                                wait(0.1)
                                game:GetService("ReplicatedStorage").RemoteEvents.MoveEvents.remoteMoveObject:FireServer(d, CFrame.new(44, 252, -51) * CFrame.Angles(-0, 0, -0))
                                wait(0.1)
                                game:GetService("ReplicatedStorage").RemoteEvents.MoveEvents.remoteMoveObject:FireServer(v, CFrame.new(44, 252, -51) * CFrame.Angles(-0, 0, -0))
                                wait(0.1)
                                game:GetService("ReplicatedStorage").RemoteEvents.MoveEvents.remoteMoveObject:FireServer(d, CFrame.new(44, 254, -78) * CFrame.Angles(-0, 0, -0))
                                --print("sold")
                                break
                            end
                        end
                    end
                end
            end
        end
    end
end

function CalculateCoins(unit)
    local allTime = (getgenv().spawn * 1.78) + (getgenv().pizzas * getgenv().sauceDelay) + getgenv().ovenDelay + (getgenv().pizzas * getgenv().slicerDelay) + ((getgenv().pizzas * getgenv().toppingsDelay) * getgenv().summToppings)
    local sellingTime = getgenv().pizzas * 2.5
    local combinedTime = allTime + sellingTime

    local intervalHour = 3600 / combinedTime
    local totalCoinsHour = intervalHour * (getgenv().pizzas * 20)
    return (tostring(math.floor(totalCoinsHour + 0.5)).." coins/hour")
end

local SauceDropdown = Tabs.Farm:AddDropdown("SauceDropdown", {
    Title = "üîÅ  AutoFarm",
    Values = {"Pizza AutoFarm üçï", "lolas"},
    Multi = false,
    Default = 2,
})

SauceDropdown:OnChanged(function(Value)
    if Value == "Pizza AutoFarm üçï" then
        getgenv().CoinsShow = Tabs.Farm:AddParagraph({
            Title = "üí∞  Coins Predictions",
            Content = "0 coins/hour"
        })
        
        getgenv().ConfigTab = Tabs.Farm:AddParagraph({
            Title = "‚öôÔ∏è  Configs  ‚öôÔ∏è"
            --Content = ""
        })
        
        getgenv().SpawnSlider = Tabs.Farm:AddSlider("SpawnSlider", {
            Title = "üçû  Spawn Count",
            Description = "",
            Default = 1,
            Min = 1,
            Max = 15,
            Rounding = 0.1,
            Callback = function(Value)
                getgenv().spawn = Value
            end
        })
        
        getgenv().SauceSlider = Tabs.Farm:AddSlider("SauceSlider", {
            Title = "üå∂Ô∏è  Sauce Delay",
            Description = "",
            Default = 0.3,
            Min = 0.1,
            Max = 2,
            Rounding = 1,
            Callback = function(Value)
                getgenv().sauceDelay = Value
            end
        })
        
        getgenv().SauceDropdown = Tabs.Farm:AddDropdown("SauceDropdown", {
            Title = "üé®  Sauce Color",
            Values = {"Red üî¥", "Green üü¢", "Purple üü£", "Orange üü†"},
            Multi = false,
            Default = 1,
        })
        
        getgenv().SauceDropdown:OnChanged(function(Value)
            if Value == "Red üî¥" then
                getgenv().sauceColorNum = 1
            elseif Value == "Green üü¢" then
                getgenv().sauceColorNum = 2
            elseif Value == "Purple üü£" then
                getgenv().sauceColorNum = 3
            elseif Value == "Orange üü†" then
                getgenv().sauceColorNum = 4
            end
        end)

        getgenv().ToppingsSlider = Tabs.Farm:AddSlider("SauceSlider", {
            Title = "üç≥  Toppings Delay",
            Description = "",
            Default = 0.25,
            Min = 0.1,
            Max = 2,
            Rounding = 1,
            Callback = function(Value)
                getgenv().toppingsDelay = Value
            end
        })

        getgenv().ToppingsDropdown = Tabs.Farm:AddDropdown("SauceDropdown", {
            Title = "üßÇ  Toppings",
            Values = {"Pepperoni üî¥", "Tomatoes üçÖ", "Olives üü¢", "Cheese üßÄ", "Basil ü•¨"},
            Multi = true,
            Default = {"Pepperoni üî¥"},
        })

        getgenv().ToppingsDropdown:OnChanged(function(Value)
            local Values = {}
            for Value, State in pairs(Value) do
                table.insert(Values, Value)
            end

            local toppings = {
                ["Pepperoni üî¥"] = "topping1Skip",
                ["Tomatoes üçÖ"] = "topping2Skip",
                ["Olives ü´í"] = "topping3Skip",
                ["Cheese üßÄ"] = "topping4Skip",
                ["Basil ü•¨"] = "topping5Skip"
            }

            for topping, skipVar in pairs(toppings) do
                getgenv()[skipVar] = not table.find(Values, topping)
            end
        end)

        getgenv().SellPizzaToggle = Tabs.Farm:AddToggle("SellPizza", {Title = "üíµ  Sell Pizza", Default = getgenv().SellPizza})
        
        getgenv().SellPizzaToggle:OnChanged(function(Value)
            getgenv().SellPizza = Value
        end)

        getgenv().AutoFarmPizzaToggle = Tabs.Farm:AddToggle("AutoFarmPizza", {Title = "üçï  Auto Farm Pizza", Default = getgenv().AutoFarmPizza})
        
        getgenv().AutoFarmPizzaToggle:OnChanged(function(Value)
            getgenv().AutoFarmPizza = Value
        
            while getgenv().AutoFarmPizza == true do
                print("Started!")
                getgenv().pizzas = 0
                for i = 1,getgenv().spawn do
                    --print("spawned")
                    game.ReplicatedStorage.PizzaEvents.remoteDropDough:FireServer(workspace.ServerInteractables.DoughDropper)
                    wait(1.78)
                end
                TeleportPizza("Sauce")
                TeleportPizza("Toppings")
                getgenv().CoinsShow:SetDesc(CalculateCoins())
                TeleportPizza("Oven")
                wait(getgenv().ovenDelay)
                TeleportPizza("Slicer")
                if getgenv().SellPizza == true and getgenv().AutoFarmPizza == true then
                    SellPizzas("Boxes")
                end
            end
            getgenv().CoinsShow:SetDesc("0 coins/hour")
        end)
    elseif Value == "lolas" then
        if getgenv().CoinsShow and getgenv().SellPizzaToggle then
            getgenv().CoinsShow:Destroy()
            getgenv().AutoFarmPizzaToggle:Destroy()
            getgenv().ConfigTab:Destroy()
            getgenv().SpawnSlider:Destroy()
            getgenv().SauceSlider:Destroy()
            getgenv().SauceDropdown:Destroy()
            getgenv().ToppingsSlider:Destroy()
            getgenv().ToppingsDropdown:Destroy()
            getgenv().SellPizzaToggle:Destroy()
        end
    end
end)

Window:SelectTab(1)

Notify("‚úÖ  Successfully Loaded!", 5)
